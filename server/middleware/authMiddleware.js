const jwt = require("jsonwebtoken");
require("dotenv").config();


const authMiddleware = (req, res, next) => {
    const token = req.header("Authorization");
    if (!token) {
        return res.status(401).json({ error: "Truy c·∫≠p b·ªã t·ª´ ch·ªëi, kh√¥ng c√≥ token!" });
    }

    try {
      //  const decoded = jwt.verify(token.replace("Bearer ", ""), "SECRET_KEY");
      const decoded = jwt.verify(token.replace("Bearer ", ""), process.env.JWT_SECRET);

        req.user = decoded; // G√°n th√¥ng tin user t·ª´ token
        next();
    } catch (error) {
        res.status(401).json({ error: "Token kh√¥ng h·ª£p l·ªá!" });
    }
};

module.exports = authMiddleware;

// const WebSocket = require("ws");
// const axios = require("axios");
// const jwt = require("jsonwebtoken");
// const User = require("../models/user"); // Ki·ªÉm tra l·∫°i ƒë∆∞·ªùng d·∫´n
// const wsPort = 8080;

// const wss = new WebSocket.Server({ port: wsPort });
// const clients = new Map();
// let previousData = new Map();

// console.log(`üì° WebSocket Server ch·∫°y tr√™n ws://localhost:${wsPort}`);

// wss.on("connection", async (ws, req) => {
//     // üîπ L·∫•y token t·ª´ URL (WebSocket kh√¥ng c√≥ headers)
//     const urlParams = new URLSearchParams(req.url.split("?")[1]);
//     const token = urlParams.get("token");

//     if (!token) {
//         console.error("‚ùå Kh√¥ng c√≥ token, t·ª´ ch·ªëi k·∫øt n·ªëi WebSocket");
//         ws.close();
//         return;
//     }

//     try {
//         // ‚úÖ Gi·∫£i m√£ token b·∫±ng JWT
//         const decoded = jwt.verify(token, process.env.JWT_SECRET);
//         const user = await User.findById(decoded.id).select("-password");

//         if (!user) {
//             console.error("‚ùå User kh√¥ng h·ª£p l·ªá");
//             ws.close();
//             return;
//         }

//         console.log(`‚ö° User ${user.id} ƒë√£ k·∫øt n·ªëi WebSocket`);

//         // L·∫•y danh s√°ch thi·∫øt b·ªã c·ªßa user
//         const userDevices = await User.findById(user.id).select("devices").lean();
//         if (!userDevices) {
//             ws.close();
//             return;
//         }

//         // L∆∞u client theo userId
//         if (!clients.has(user.id)) {
//             clients.set(user.id, new Set());
//         }
//         clients.get(user.id).add(ws);

//         ws.on("close", () => {
//             console.log(`‚ö° User ${user.id} ng·∫Øt k·∫øt n·ªëi`);
//             clients.get(user.id)?.delete(ws);
//         });
//     } catch (err) {
//         console.error("‚ùå Token kh√¥ng h·ª£p l·ªá:", err.message);
//         ws.close();
//     }
// });
