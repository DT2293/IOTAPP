#define BLYNK_TEMPLATE_ID "TMPL6lIbB6__g"
#define BLYNK_TEMPLATE_NAME "sensor"
#define BLYNK_AUTH_TOKEN "NoyfeonUVqzMsSW6yGK2fIyEbOsI9FTf"
#include "config.h"
#include <Adafruit_SSD1306.h>
#include <Adafruit_GFX.h>
#include "configs.h"
#include "rtc/rtc_manager.h"
#include "display/display_manager.h"
#include "flame/flame_sensor.h"
#include "led_buzzer/led_buzzer_control.h"
#include <WiFi.h>
#include <WiFiManager.h>
#include <BlynkSimpleEsp32.h>
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);
unsigned long lastPrintTime = 0;

String deviceId; 
void setup()
{
  Serial.begin(115200);
  Wire.begin(19, 21); // OLED

  initRTC();
  initDisplay();
  initFlameSensor();
  initLedBuzzer();
  digitalWrite(BUZZER_PIN, LOW);
// N·∫øu ESP32 kh√¥ng k·∫øt n·ªëi ƒë∆∞·ª£c WiFi ƒë√£ l∆∞u th√¨ s·∫Ω t·∫°o AP ƒë·ªÉ c·∫•u h√¨nh
  Serial.println("Kh·ªüi ƒë·ªông WiFiManager...");

  WiFiManager wifiManager;
  if (!wifiManager.autoConnect("ESP32-Config-AP")) {
    Serial.println("Kh√¥ng k·∫øt n·ªëi ƒë∆∞·ª£c WiFi v√† c·∫•u h√¨nh WiFi th·∫•t b·∫°i!");
    // C√≥ th·ªÉ reset l·∫°i ho·∫∑c d·ª´ng ·ªü ƒë√¢y t√πy nhu c·∫ßu
    // ESP.restart();
  } else {
    Serial.println("WiFi ƒë√£ k·∫øt n·ªëi!");
    Serial.print("ƒê·ªãa ch·ªâ IP hi·ªán t·∫°i: ");
    Serial.println(WiFi.localIP());

    // Hi·ªÉn th·ªã IP l√™n OLED (v√≠ d·ª•)
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(WHITE);
    display.setCursor(0, 0);
    display.println("WiFi Connected!");
    display.print("IP: ");
    display.println(WiFi.localIP());
    display.display();
  }

  //   WiFi.mode(WIFI_STA);  // Kh·ªüi ƒë·ªông WiFi ch·∫ø ƒë·ªô station ƒë·ªÉ l·∫•y MAC
  // String deviceId = WiFi.macAddress();
  // String jsonPayload = "{\"deviceId\":\"" + deviceId + "\"}";

  // showQRCode(jsonPayload);
  //  unsigned long qrStartTime = millis();
  // while (millis() - qrStartTime < 60000) {
  //   // Gi·ªØ QR code tr√™n m√†n h√¨nh 60 gi√¢y, c√≥ th·ªÉ ch√®n th√™m logic n·∫øu c·∫ßn
  //   delay(100);
  // }


  WiFi.mode(WIFI_STA);
  deviceId = WiFi.macAddress();

  String jsonPayload = "{\"deviceId\":\"" + deviceId + "\"}";

  showQRCode(jsonPayload);

  unsigned long qrStartTime = millis();
  while (millis() - qrStartTime < 6000) {
    Blynk.run();  // Gi·ªØ k·∫øt n·ªëi Blynk trong l√∫c hi·ªÉn th·ªã QR
    delay(100);
  }

  // Kh·ªüi ƒë·ªông Blynk sau khi WiFi ƒë√£ k·∫øt n·ªëi
  Blynk.config(BLYNK_AUTH_TOKEN);
  while (Blynk.connect() == false) {
    delay(500);
    Serial.println("ƒêang k·∫øt n·ªëi Blynk...");
  }

  Serial.println("Setup ho√†n th√†nh.");
}

void loop()
{
  int analogVal, digitalVal;
  bool flameDetected = isFlameDetected(analogVal, digitalVal);

  if (digitalVal == -1 || analogVal > 4095)
  {
    noSignalAlert(); 
  }
  else if (flameDetected)
  {
    startAlert(); 
  }
  else
  {
    stopAlert(); 
  }

  
  // G·ª≠i tr·∫°ng th√°i l√™n Blynk
  Blynk.virtualWrite(V2, flameDetected ? "üî• C√≥ l·ª≠a!" : "‚úÖ An to√†n");

  // C·∫≠p nh·∫≠t hi·ªÉn th·ªã v·ªõi gi√° tr·ªã ƒë√£ ƒëo
  updateDisplay(flameDetected);

  // G·ªçi Blynk
  Blynk.run();
}


// #define BLYNK_TEMPLATE_ID "TMPL6lIbB6__g"
// #define BLYNK_TEMPLATE_NAME "sensor"
// #define BLYNK_AUTH_TOKEN "NoyfeonUVqzMsSW6yGK2fIyEbOsI9FTf"
// #include "config.h"
// #include <Adafruit_SSD1306.h>
// #include <Adafruit_GFX.h>
// #include "configs.h"
// #include "rtc/rtc_manager.h"
// #include "display/display_manager.h"
// #include "flame/flame_sensor.h"
// #include "led_buzzer/led_buzzer_control.h"
// #include <WiFi.h>
// #include <WiFiManager.h>
// #include <BlynkSimpleEsp32.h>
// Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);
// unsigned long lastPrintTime = 0;
// String deviceId;  // Global variable to store MAC address


// void setup()
// {
//   Serial.begin(115200);
//   Wire.begin(19, 21); // OLED

//   initRTC();
//   initDisplay();
//   initFlameSensor();
//   initLedBuzzer();
//   digitalWrite(BUZZER_PIN, LOW);

//   Serial.println("Kh·ªüi ƒë·ªông WiFiManager...");

//   WiFiManager wifiManager;
//   if (!wifiManager.autoConnect("ESP32-Config-AP")) {
//     Serial.println("Kh√¥ng k·∫øt n·ªëi ƒë∆∞·ª£c WiFi v√† c·∫•u h√¨nh WiFi th·∫•t b·∫°i!");
//     // ESP.restart(); // n·∫øu mu·ªën restart
//   } else {
//     Serial.println("WiFi ƒë√£ k·∫øt n·ªëi!");
//     Serial.print("ƒê·ªãa ch·ªâ IP hi·ªán t·∫°i: ");
//     Serial.println(WiFi.localIP());

//     display.clearDisplay();
//     display.setTextSize(1);
//     display.setTextColor(WHITE);
//     display.setCursor(0, 0);
//     display.println("WiFi Connected!");
//     display.print("IP: ");
//     display.println(WiFi.localIP());
//     display.display();
//   }

//   WiFi.mode(WIFI_STA);
//   deviceId = WiFi.macAddress();

//   String jsonPayload = "{\"deviceId\":\"" + deviceId + "\"}";

//   showQRCode(jsonPayload);

//   unsigned long qrStartTime = millis();
//   while (millis() - qrStartTime < 60000) {
//     Blynk.run();  // Gi·ªØ k·∫øt n·ªëi Blynk trong l√∫c hi·ªÉn th·ªã QR
//     delay(100);
//   }

//   // Kh·ªüi ƒë·ªông Blynk sau khi WiFi ƒë√£ k·∫øt n·ªëi
//   Blynk.config(BLYNK_AUTH_TOKEN);
//   while (Blynk.connect() == false) {
//     delay(500);
//     Serial.println("ƒêang k·∫øt n·ªëi Blynk...");
//   }

//   Serial.println("Setup ho√†n th√†nh.");
// }


// void loop()
// {
//   int analogVal, digitalVal;

//   bool flameDetected = isFlameDetected(analogVal, digitalVal);

//   if (digitalVal == -1 || analogVal > 4095)
//   {
//     noSignalAlert(); 
//   }
//   else if (flameDetected)
//   {
//     startAlert(); 
//   }
//   else
//   {
//     stopAlert(); 
//   }
//   Blynk.virtualWrite(V2, flameDetected ? "üî• C√≥ l·ª≠a!" : "‚úÖ An to√†n");
//   updateDisplay(isFlameDetected(analogVal, digitalVal));
//   Blynk.run();
// }

// BLYNK_CONNECTED() {
//   Blynk.virtualWrite(V0, deviceId);  // V4 s·∫Ω hi·ªÉn th·ªã deviceId
// }



// #include "config.h"
// #include <Adafruit_SSD1306.h>
// #include <Adafruit_GFX.h>
// #include "configs.h"
// #include "rtc/rtc_manager.h"
// #include "display/display_manager.h"
// #include "flame/flame_sensor.h"
// #include "led_buzzer/led_buzzer_control.h"
// #include <WiFi.h>
// #include <WiFiManager.h>

// Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);
// unsigned long lastPrintTime = 0;


// void setup()
// {
//   Serial.begin(115200);
//   Wire.begin(19, 21); // OLED

//   initRTC();
//   initDisplay();
//   initFlameSensor();
//   initLedBuzzer();
//   digitalWrite(BUZZER_PIN, LOW);
// // N·∫øu ESP32 kh√¥ng k·∫øt n·ªëi ƒë∆∞·ª£c WiFi ƒë√£ l∆∞u th√¨ s·∫Ω t·∫°o AP ƒë·ªÉ c·∫•u h√¨nh
//   Serial.println("Kh·ªüi ƒë·ªông WiFiManager...");

//   WiFiManager wifiManager;
//   if (!wifiManager.autoConnect("ESP32-Config-AP")) {
//     Serial.println("Kh√¥ng k·∫øt n·ªëi ƒë∆∞·ª£c WiFi v√† c·∫•u h√¨nh WiFi th·∫•t b·∫°i!");
//     // C√≥ th·ªÉ reset l·∫°i ho·∫∑c d·ª´ng ·ªü ƒë√¢y t√πy nhu c·∫ßu
//     // ESP.restart();
//   } else {
//     Serial.println("WiFi ƒë√£ k·∫øt n·ªëi!");
//     Serial.print("ƒê·ªãa ch·ªâ IP hi·ªán t·∫°i: ");
//     Serial.println(WiFi.localIP());

//     // Hi·ªÉn th·ªã IP l√™n OLED (v√≠ d·ª•)
//     display.clearDisplay();
//     display.setTextSize(1);
//     display.setTextColor(WHITE);
//     display.setCursor(0, 0);
//     display.println("WiFi Connected!");
//     display.print("IP: ");
//     display.println(WiFi.localIP());
//     display.display();
//   }

//     WiFi.mode(WIFI_STA);  // Kh·ªüi ƒë·ªông WiFi ch·∫ø ƒë·ªô station ƒë·ªÉ l·∫•y MAC
//   String deviceId = WiFi.macAddress();
//   String jsonPayload = "{\"deviceId\":\"" + deviceId + "\"}";

//   showQRCode(jsonPayload);
//    unsigned long qrStartTime = millis();
//   while (millis() - qrStartTime < 60000) {
//     // Gi·ªØ QR code tr√™n m√†n h√¨nh 60 gi√¢y, c√≥ th·ªÉ ch√®n th√™m logic n·∫øu c·∫ßn
//     delay(100);
//   }
//   Serial.println("Setup ho√†n th√†nh.");
// }

// void loop()
// {
//   int analogVal, digitalVal;

//   bool flameDetected = isFlameDetected(analogVal, digitalVal);

//   if (digitalVal == -1 || analogVal > 4095)
//   {
//     noSignalAlert(); 
//   }
//   else if (flameDetected)
//   {
//     startAlert(); 
//   }
//   else
//   {
//     stopAlert(); 
//   }

//   updateDisplay(isFlameDetected(analogVal, digitalVal));
// }